{"version":3,"sources":["../../assets/js/destructure.js"],"names":["node","type","name","console","log","value","localType","localName","loc","start","line","column","end","localStar","colors","fristColor","secondColor","thirdColor","a","b","restColors","length","clonedColors","range","startIndex","endIndex"],"mappings":"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","file":"destructure.js","sourcesContent":["//Object destructuring\r\nvar node = {\r\n\ttype: \"Identifier\",\r\n\tname: \"foo\"\r\n};\r\nvar {type, name} = node;\r\nconsole.log(type, name);//Identifier foo\r\n\r\nvar {type, name, value} = node;\r\nconsole.log(type, name, value);//Identifier foo undefined\r\n\r\n//default value\r\nvar {type, name, value = true} = node;\r\nconsole.log(type, name, value);//Identifier foo true\r\n\r\n//assigning to Different Local Variable Names\r\nvar {type: localType, name: localName} = node;\r\nconsole.log(type, name);//Identifier foo\r\nconsole.log(localType, localName);//Identifier foo\r\n\r\nvar node = {\r\n\ttype: \"Identifier\"\r\n};\r\nvar {type: localType, name: localName = \"bar\"} = node;\r\nconsole.log(localType, localName);//Identifier bar\r\nconsole.log(localType, localName);//Identifier bar\r\n\r\n//Nested Object Destructuring\r\nvar node = {\r\n\ttype: \"Identifier\",\r\n\tname: \"foo\",\r\n\tloc: {\r\n\t\tstart: {\r\n\t\t\tline: 1,\r\n\t\t\tcolumn: 1\r\n\t\t},\r\n\t\tend: {\r\n\t\t\tline: 1,\r\n\t\t\tcolumn: 4\r\n\t\t}\r\n\t}\r\n};\r\nvar {loc: {start}} = node;\r\nconsole.log(start);\r\nvar {loc: {start: localStar}} = node;\r\nconsole.log(localStar);\r\n\r\n//Array Destructuring\r\nvar colors = [\"red\", \"green\", \"blue\"];\r\nvar [fristColor, secondColor] = colors;\r\nconsole.log(fristColor, secondColor);//red green\r\nvar [,,thirdColor] = colors;\r\nconsole.log(thirdColor);//blue\r\n\r\nvar colors = [\"red\", \"green\", \"blue\"],\r\n\tfristColor = \"black\",\r\n\tsecondColor = \"purple\";\r\n[fristColor, secondColor] = colors;\r\nconsole.log(fristColor, secondColor);//red green\r\n\r\nvar a = 1,\r\n\tb = 2;\r\n[a, b] = [b, a];\r\nconsole.log(a, b);//2 1\r\n\r\n//Default values\r\nvar colors = [\"red\"];\r\nvar [fristColor, secondColor = \"green\"] = colors;\r\nconsole.log(fristColor, secondColor);//red green\r\n\r\n//Nested Array Destructuring\r\nvar colors = [\"red\", [\"green\", \"lightgreen\"], \"blue\"];\r\nvar [fristColor, [secondColor]] = colors;\r\nconsole.log(fristColor, secondColor);//red green\r\n\r\n//Rest Items\r\nvar colors = [\"red\", \"green\", \"blue\"];\r\nvar [fristColor, ...restColors] = colors;\r\nconsole.log(fristColor);//red\r\nconsole.log(restColors.length);//2\r\nconsole.log(restColors[0]);//green\r\nconsole.log(restColors[1]);//blue\r\n\r\nvar colors = [\"red\", \"green\", \"blue\"];\r\nvar [...clonedColors] = colors;\r\nconsole.log(clonedColors);//[\"red\", \"green\", \"blue\"]\r\n\r\n//Mixed Destructuring\r\nvar node = {\r\n\ttype: \"Identifier\",\r\n\tname: \"foo\",\r\n\tloc: {\r\n\t\tstart: {\r\n\t\t\tline: 1,\r\n\t\t\tcolumn: 1\r\n\t\t},\r\n\t\tend: {\r\n\t\t\tline: 1,\r\n\t\t\tcolumn: 4\r\n\t\t}\r\n\t},\r\n\trange: [0, 3]\r\n};\r\nvar {loc: {start}, range: [startIndex, endIndex]} = node;\r\nconsole.log(start);//{\"line\": 1, \"column\": 1}\r\nconsole.log(startIndex, endIndex);//0 3"]}